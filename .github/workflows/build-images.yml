name: Build and Push Container Images

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      push_images:
        description: 'Push images to GHCR'
        required: true
        default: true
        type: boolean
      services:
        description: 'Services to build (comma-separated: discovery,management-ui,health-monitor or "all")'
        required: true
        default: 'all'
        type: string

  # Trigger on releases
  release:
    types: [published]

  # Trigger on pushes to main (build only, no push)
  push:
    branches: [main]
    paths:
      - 'services/**'
      - '.github/workflows/build-images.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-matrix.outputs.services }}
    steps:
      - name: Set build matrix
        id: set-matrix
        run: |
          if [ "${{ github.event.inputs.services }}" = "all" ] || [ "${{ github.event.inputs.services }}" = "" ]; then
            echo 'services=["discovery","management-ui","health-monitor"]' >> $GITHUB_OUTPUT
          else
            # Convert comma-separated string to JSON array
            services=$(echo "${{ github.event.inputs.services }}" | sed 's/,/","/g' | sed 's/^/["/' | sed 's/$/"]/')
            echo "services=$services" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.build-matrix.outputs.services) }}
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.push_images == 'true')
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./services/${{ matrix.service }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.push_images == 'true') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate image summary
        if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.push_images == 'true')
        run: |
          echo "## 🐳 Container Image Built" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Service:** ${{ matrix.service }}" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** ${{ env.REGISTRY }}" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.service }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Available Tags:" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY

  update-compose:
    needs: [build-matrix, build-and-push]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update docker-compose files with new image tags
        run: |
          # Extract version from release tag
          VERSION=${GITHUB_REF#refs/tags/}
          
          # Update docker-compose.yml to use GHCR images
          sed -i "s|build:|# build:|g" docker-compose.yml
          sed -i "s|context: ./services/discovery|context: ./services/discovery|g" docker-compose.yml
          sed -i "s|dockerfile: Dockerfile|dockerfile: Dockerfile|g" docker-compose.yml
          
          # Add image references for each service
          for service in discovery management-ui health-monitor; do
            sed -i "/# build:/a\\    image: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${service}:${VERSION}" docker-compose.yml
          done

      - name: Commit updated compose files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docker-compose.yml
          git commit -m "Update container images to ${GITHUB_REF#refs/tags/}" || exit 0
          git push