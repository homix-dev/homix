name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Check code formatting and common issues
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check YAML files
        run: |
          # Install yamllint
          pip install yamllint
          
          # Lint YAML files
          yamllint -c .yamllint.yml . || true
      
      - name: Check shell scripts
        run: |
          # Find and check shell scripts
          find . -name "*.sh" -type f -print0 | xargs -0 shellcheck || true
      
      - name: Check Markdown files
        uses: DavidAnson/markdownlint-cli2-action@v20
        with:
          config: '.markdownlint.yml'
        continue-on-error: true

  # Verify documentation
  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check for broken links
        uses: lycheeverse/lychee-action@v2
        with:
          args: --verbose --no-progress './README.md' './docs/**/*.md' './edge/README.md'
          fail: false

  # Security scanning
  security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'
      
      - name: Run Trivy in table format
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'
      
      - name: Check SARIF file
        run: |
          if [ -f trivy-results.sarif ]; then
            echo "SARIF file exists"
            ls -la trivy-results.sarif
          else
            echo "SARIF file does not exist"
            echo "Creating empty SARIF file"
            echo '{"version":"2.1.0","runs":[]}' > trivy-results.sarif
          fi
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'trivy'
        continue-on-error: true

  # Verify Task commands work
  taskfile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
      
      - name: List available tasks
        run: task --list
      
      - name: Check Task syntax
        run: |
          # Check all Taskfiles for syntax errors
          find . -name "Taskfile*.y*ml" -type f | while read -r file; do
            echo "Checking $file..."
            task --taskfile "$file" --list > /dev/null || echo "Error in $file"
          done

  # Summary job
  ci-summary:
    runs-on: ubuntu-latest
    needs: [lint, docs, security, taskfile]
    if: always()
    steps:
      - name: CI Summary
        run: |
          echo "## CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check job statuses
          if [[ "${{ needs.lint.result }}" == "success" ]]; then
            echo "✅ Linting passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Linting failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.docs.result }}" == "success" ]]; then
            echo "✅ Documentation check passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Documentation check failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.security.result }}" == "success" ]]; then
            echo "✅ Security scan passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Security scan failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.taskfile.result }}" == "success" ]]; then
            echo "✅ Taskfile validation passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Taskfile validation failed" >> $GITHUB_STEP_SUMMARY
          fi