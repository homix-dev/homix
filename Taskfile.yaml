version: '3'

# Cloud-First Homix Tasks
# Simple tasks for the new architecture

vars:
  CONTAINER_TOOL: '{{default "docker" .CONTAINER_TOOL}}'
  EDGE_IMAGE: ghcr.io/calmera/homix-edge:latest

tasks:
  default:
    desc: Show available tasks
    cmds:
      - task --list

  # === QUICK START ===
  install:
    desc: Run interactive installer for edge server
    cmds:
      - ./scripts/install.sh

  test-cloud:
    desc: Test your Synadia Cloud connection
    cmds:
      - ./scripts/test-cloud-connection.sh {{.CREDS}}
    vars:
      CREDS: '{{default "~/.synadia/NGS-Home-*.creds" .CREDS}}'

  # === EDGE SERVER ===
  edge:run:
    desc: Run edge server locally (development)
    dir: edge
    cmds:
      - go run ./cmd/edge
    env:
      SYNADIA_CREDS: '{{.SYNADIA_CREDS}}'
      HOME_NAME: '{{default "Dev Home" .HOME_NAME}}'

  edge:build:
    desc: Build edge server Docker image
    dir: edge
    cmds:
      - '{{.CONTAINER_TOOL}} build -t {{.EDGE_IMAGE}} .'

  edge:push:
    desc: Push edge server image to registry
    cmds:
      - '{{.CONTAINER_TOOL}} push {{.EDGE_IMAGE}}'

  edge:start:
    desc: Start edge server with Docker/Podman
    cmds:
      - |
        {{.CONTAINER_TOOL}} run -d \
          --name nats-home-edge \
          --network host \
          -v {{.CREDS}}:/creds/cloud.creds:ro \
          -e HOME_NAME="{{.HOME_NAME}}" \
          {{.EDGE_IMAGE}}
    vars:
      CREDS: '{{default "~/.synadia/NGS-Home-daan.creds" .SYNADIA_CREDS}}'
      HOME_NAME: '{{default "My Home" .HOME_NAME}}'

  edge:stop:
    desc: Stop edge server
    cmds:
      - '{{.CONTAINER_TOOL}} stop nats-home-edge'
      - '{{.CONTAINER_TOOL}} rm nats-home-edge'

  edge:logs:
    desc: View edge server logs
    cmds:
      - '{{.CONTAINER_TOOL}} logs -f nats-home-edge'

  # === DEVELOPMENT ===
  dev:
    desc: Run edge server in development mode with hot reload
    dir: edge
    cmds:
      - air -c .air.toml
    env:
      SYNADIA_CREDS: '{{default "~/.synadia/NGS-Home-daan.creds" .SYNADIA_CREDS}}'
      HOME_NAME: '{{default "Dev Home" .HOME_NAME}}'
      LOG_LEVEL: debug

  test:
    desc: Run all tests
    cmds:
      - task: test:edge
      - task: test:integration

  test:edge:
    desc: Run edge server tests
    dir: edge
    cmds:
      - go test -v ./...

  test:integration:
    desc: Run integration tests
    cmds:
      - echo 'Integration tests not yet implemented'

  # === CLOUD UI ===
  ui:dev:
    desc: Run cloud UI in development mode
    dir: cloud/web-ui
    cmds:
      - npm run dev

  ui:build:
    desc: Build cloud UI for production
    dir: cloud/web-ui
    cmds:
      - npm run build

  ui:deploy:
    desc: Deploy cloud UI to Vercel
    dir: cloud/web-ui
    cmds:
      - vercel --prod

  # === UTILITIES ===
  monitor:
    desc: Monitor NATS messages
    cmds:
      - nats --server {{.SERVER}} --creds {{.CREDS}} sub "{{.SUBJECT}}"
    vars:
      SERVER: '{{default "tls://connect.ngs.global" .SERVER}}'
      CREDS: '{{default "~/.synadia/NGS-Home-daan.creds" .CREDS}}'
      SUBJECT: '{{default "home.>" .SUBJECT}}'

  clean:
    desc: Clean up containers and generated files
    cmds:
      - '{{.CONTAINER_TOOL}} stop nats-home-edge || true'
      - '{{.CONTAINER_TOOL}} rm nats-home-edge || true'
      - rm -rf edge/dist
      - rm -rf cloud/web-ui/dist

  # === LEGACY SUPPORT ===
  legacy:info:
    desc: Information about migrating from legacy setup
    cmds:
      - |
        echo "======================================"
        echo "Legacy to Cloud Migration"
        echo "======================================"
        echo ""
        echo "The old multi-container setup has been replaced with:"
        echo "1. One edge server at home"
        echo "2. Cloud-based management UI"
        echo "3. Per-device JWT security"
        echo ""
        echo "To migrate:"
        echo "1. Export your devices: task legacy:export"
        echo "2. Set up Synadia Cloud: https://app.ngs.global"
        echo "3. Run installer: task install"
        echo "4. Import devices: task legacy:import"
        echo ""
        echo "See docs/migration-guide.md for details"

  legacy:export:
    desc: Export devices and automations from legacy setup
    cmds:
      - echo 'TODO - Add export functionality'

  legacy:import:
    desc: Import devices and automations to cloud setup
    cmds:
      - echo 'TODO - Add import functionality'